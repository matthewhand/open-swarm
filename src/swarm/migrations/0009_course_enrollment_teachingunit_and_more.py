# Generated by Django 4.2.18 on 2025-02-13 05:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("swarm", "0008_chatconversation_messages_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the course (e.g., Bachelor of Science).",
                        max_length=255,
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for the course (e.g., BSCI).",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "coordinator",
                    models.CharField(
                        help_text="Name of the course coordinator.", max_length=255
                    ),
                ),
                (
                    "teaching_prompt",
                    models.TextField(
                        blank=True,
                        help_text="Instructions or guidelines for teaching this course.",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Course",
                "verbose_name_plural": "Courses",
            },
        ),
        migrations.CreateModel(
            name="Enrollment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enrollment_date",
                    models.DateField(
                        auto_now_add=True,
                        help_text="Date the student enrolled in the course.",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("enrolled", "Enrolled"),
                            ("completed", "Completed"),
                            ("dropped", "Dropped"),
                        ],
                        default="enrolled",
                        help_text="Enrollment status.",
                        max_length=20,
                    ),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enrollments",
                        to="swarm.course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Enrollment",
                "verbose_name_plural": "Enrollments",
            },
        ),
        migrations.CreateModel(
            name="TeachingUnit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for the teaching unit (e.g., MTHS120).",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Descriptive name of the teaching unit (e.g., Calculus).",
                        max_length=255,
                    ),
                ),
                (
                    "teaching_prompt",
                    models.TextField(
                        blank=True,
                        help_text="Instructions or guidelines for teaching this unit.",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Teaching Unit",
                "verbose_name_plural": "Teaching Units",
            },
        ),
        migrations.AlterModelOptions(
            name="chatconversation",
            options={
                "verbose_name": "Chat Conversation",
                "verbose_name_plural": "Chat Conversations",
            },
        ),
        migrations.AlterModelOptions(
            name="chatmessage",
            options={
                "ordering": ["timestamp"],
                "verbose_name": "Chat Message",
                "verbose_name_plural": "Chat Messages",
            },
        ),
        migrations.RemoveField(
            model_name="chatconversation",
            name="messages",
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the topic.", max_length=255),
                ),
                (
                    "teaching_prompt",
                    models.TextField(
                        blank=True,
                        help_text="Instructions or guidelines for teaching this topic.",
                        null=True,
                    ),
                ),
                (
                    "teaching_unit",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="topics",
                        to="swarm.teachingunit",
                    ),
                ),
            ],
            options={
                "verbose_name": "Topic",
                "verbose_name_plural": "Topics",
            },
        ),
        migrations.CreateModel(
            name="Subtopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the subtopic.", max_length=255),
                ),
                (
                    "teaching_prompt",
                    models.TextField(
                        blank=True,
                        help_text="Instructions or guidelines for teaching this subtopic.",
                        null=True,
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtopics",
                        to="swarm.topic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subtopic",
                "verbose_name_plural": "Subtopics",
            },
        ),
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Full name of the student.", max_length=255
                    ),
                ),
                (
                    "gpa",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        help_text="Grade point average of the student.",
                        max_digits=3,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("active", "Active"), ("idle", "Idle")],
                        default="active",
                        help_text="Current status of the student.",
                        max_length=10,
                    ),
                ),
                (
                    "courses",
                    models.ManyToManyField(
                        help_text="Courses the student is enrolled in.",
                        related_name="students",
                        through="swarm.Enrollment",
                        to="swarm.course",
                    ),
                ),
            ],
            options={
                "verbose_name": "Student",
                "verbose_name_plural": "Students",
            },
        ),
        migrations.CreateModel(
            name="LearningObjective",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        help_text="Detailed description of the learning objective."
                    ),
                ),
                (
                    "topic",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="learning_objectives",
                        to="swarm.topic",
                    ),
                ),
            ],
            options={
                "verbose_name": "Learning Objective",
                "verbose_name_plural": "Learning Objectives",
            },
        ),
        migrations.AddField(
            model_name="enrollment",
            name="student",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="enrollments",
                to="swarm.student",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="teaching_units",
            field=models.ManyToManyField(
                help_text="Teaching units included in this course.",
                related_name="courses",
                to="swarm.teachingunit",
            ),
        ),
        migrations.CreateModel(
            name="AssessmentItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the assessment (e.g., 'Midterm Exam').",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("completed", "Completed")],
                        default="pending",
                        help_text="Completion status of the assessment.",
                        max_length=20,
                    ),
                ),
                (
                    "due_date",
                    models.DateTimeField(
                        help_text="Due date and time for the assessment."
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Weight of the assessment as a percentage (e.g., 20.00).",
                        max_digits=5,
                    ),
                ),
                (
                    "submission_date",
                    models.DateTimeField(
                        blank=True,
                        help_text="Date and time the assessment was submitted.",
                        null=True,
                    ),
                ),
                (
                    "enrollment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessments",
                        to="swarm.enrollment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assessment Item",
                "verbose_name_plural": "Assessment Items",
                "ordering": ["due_date"],
            },
        ),
        migrations.AddField(
            model_name="chatconversation",
            name="student",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conversations",
                to="swarm.student",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="enrollment",
            unique_together={("student", "course")},
        ),
    ]
