[pytest]
minversion = 6.0
# Add python_files, python_classes, python_functions if needed, otherwise defaults are fine
# python_files = test_*.py *_test.py tests.py
# python_classes = Test* *Tests
# python_functions = test_*

# Prevent pytest from descending into vendor/submodule test directories
norecursedirs = .git .tox .env .venv venv env requirements* node_modules build dist *.egg-info openai-agents-python

# Filter warnings - Add more specific filters if needed
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    # Filter the specific PytestUnknownMarkWarning for 'llm'
    ignore:Unknown pytest.mark.llm.*:pytest.PytestUnknownMarkWarning
    # Filter the specific PytestCollectionWarning for TestableBlueprint __init__
    ignore:cannot collect test class 'TestableBlueprint'.*:pytest.PytestCollectionWarning
    # Filter the asyncio loop scope warning (can be addressed later by setting asyncio_default_fixture_loop_scope)
    ignore:The configuration option "asyncio_default_fixture_loop_scope" is unset.*:pytest.PytestDeprecationWarning

# Explicitly set asyncio mode (can be 'strict' or 'auto')
# 'auto' is generally more permissive.
asyncio_mode = auto

# Optional: Set default loop scope explicitly if desired later
# asyncio_default_fixture_loop_scope = function

# Add test paths to consider if needed (defaults usually work)
# testpaths = tests

# Add Django settings if needed (though django-pytest usually handles this)
# DJANGO_SETTINGS_MODULE = your_project.settings

# Add coverage settings if using pytest-cov
# [coverage:run]
# source = src
# omit = */tests/*, */migrations/*, */__init__.py

# [coverage:report]
# show_missing = true
# skip_covered = true

